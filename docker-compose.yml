version: '3.7'

services:
  fhir:
    container_name: fhir
    image: hapiproject/hapi:latest
    ports:
      - "7070:8080"
    environment:
      profiles.active: r4
      spring.datasource.url: 'jdbc:postgresql://db:5432/hapi'
      spring.datasource.username: admin
      spring.datasource.password: admin
      spring.datasource.driverClassName: org.postgresql.Driver
      spring.jpa.properties.hibernate.dialect:  ca.uhn.fhir.jpa.model.dialect.HapiFhirPostgres94Dialect
      hapi.fhir.use_apache_address_strategy: 'true'
      hapi.fhir.logger.reuse_cached_search_results_millis: -1
      hapi.fhir.logger.retain_cached_searches_mins: 0
      hapi.fhir.subscription.resthook_enabled: 'false'
      hapi.fhir.subscription.websocket_enabled: 'false' 
      hapi.mdm_enabled: 'false' 
      # - "tester.server_address=http://localhost:8080/fhir"
      hapi.fhir.reuse_cached_search_results_millis: -1
      hapi.fhir.retain_cached_searches_mins : -1
      reuse_cached_search_results_millis: -1
      retain_cached_searches_mins: -1
      SPRING_CONFIG_LOCATION: 'file:///data/hapi/application.yaml'
    volumes:
      - ./hapi-data:/data/hapi

    depends_on:
      - db
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_USER: admin
      POSTGRES_DB: hapi
    # not needed for networking between containers but here for troubleshooting
    ports:
      - "5632:5432" 

  jsreport:
     image: jsreport/jsreport
     depends_on:
       - fhir
     environment:
       aappPath: /jsreport
     ports:
       - "5488:5488"

